#问答题
##1.什么是错误处理？为什么要错误处理？
当错误发生时，js引擎会停止并抛出一个错误消息。
为了避免js停止的情况，我们进行错误处理。

##2.常见的错误有哪些？
可能是语法错误，通常是程序员造成的编码错误或错别字。
可能是拼写错误或语言中缺少的功能（可能由于浏览器差异）。
可能是由于来自服务器或用户的错误输出而导致的错误。
当然，也可能是由于许多其他不可预知的因素。

##3.能用 if 语句替代错误处理吗？如果能，请给出实例代码，如果不能，请说明原因（开放题）
if语句不能代替错误处理，if语句只能判断出这个条件的真值，但是不能抛出错误

##4.如何抛出一个错误？
当错误发生时，当事情出问题时，JavaScript 引擎通常会停止，并生成一个错误消息。

##5.以下代码可以捕获异常吗？为什么？
    function a(){
    throw new Error("An error")
    }
    function b(){
    a();
    }
    try{
    b()
    }catch(err){
    console.log(err)
    }
这段代码可以正确捕获异常，在try语句中调用了嵌套函数，将函数层层剥离开就是如下代码：
    try{
        throw new Error("An error")
    }catch(err){
        console.log(err)
    }

##6.finally 子句有什么用？
catch从句后跟随finally块，后者中放置清理代码，不管try块中是否产生异常，finally块内的逻辑总是会执行

##7.JavaScript 中 throw 可以抛出非 Error 类型的异常吗？请动手试试
可以抛出一个非Error类型的异常，例如：
    try{
    b()
    }catch(err){
    console.log(err)
    }
这段代码可以抛出一个ReferenceError(引用错误)

##8.try catch 语句可以嵌套吗？ 如何嵌套？
可以嵌套使用，可以在try语句内用一个新的try catch语句，也可在catch中使用一个新的try catch语句

#代码题
##1.请构造一段会产生异常的代码（注意：不是一定会产生，是有一定概率产生异常），然后使用异常处理机制处理它


##2.以下代码能不能正常捕获异常，如果不能请分析原因并修改代码使其可以正常捕获异常
    function asyncTask(){
        setTimeout(function(){
        throw new Error("An error")
        },1000)
    }
    try{
    asyncTask()
    } catch(err){
    console.log(err)
    }